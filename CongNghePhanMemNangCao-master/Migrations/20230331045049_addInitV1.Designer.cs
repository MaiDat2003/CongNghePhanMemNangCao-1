// <auto-generated />
using System;
using CNPMNC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CNPMNC.Migrations
{
    [DbContext(typeof(RaoVatDbContext))]
    [Migration("20230331045049_addInitV1")]
    partial class addInitV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CNPMNC.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adminName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CNPMNC.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CNPMNC.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SLUG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loaiThanhPho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenThanhPho")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CNPMNC.Models.HinhThuc", b =>
                {
                    b.Property<int>("HinhThucID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenHinhThuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HinhThucID");

                    b.ToTable("HinhThucs");
                });

            modelBuilder.Entity("CNPMNC.Models.LoaiTin", b =>
                {
                    b.Property<int>("LoaiTinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenLoaiTin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiTinID");

                    b.ToTable("LoaiTins");
                });

            modelBuilder.Entity("CNPMNC.Models.TinRaoVat", b =>
                {
                    b.Property<int>("TinRaoVatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GiaTinDang")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HinhThucID")
                        .HasColumnType("int");

                    b.Property<int>("LoaiTinID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayGioDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhTrangID")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiID")
                        .HasColumnType("int");

                    b.HasKey("TinRaoVatID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CityID");

                    b.HasIndex("HinhThucID");

                    b.HasIndex("LoaiTinID");

                    b.HasIndex("TinhTrangID");

                    b.HasIndex("TrangThaiID");

                    b.ToTable("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.TinhTrang", b =>
                {
                    b.Property<int>("TinhTrangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenTinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhTrangID");

                    b.ToTable("TinhTrangs");
                });

            modelBuilder.Entity("CNPMNC.Models.TrangThai", b =>
                {
                    b.Property<int>("TrangThaiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tenTrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrangThaiID");

                    b.ToTable("TrangThais");
                });

            modelBuilder.Entity("CNPMNC.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Passoword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UserSex")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CNPMNC.Models.TinRaoVat", b =>
                {
                    b.HasOne("CNPMNC.Models.Category", "Category")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNPMNC.Models.City", "City")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("CityID");

                    b.HasOne("CNPMNC.Models.HinhThuc", "HinhThuc")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("HinhThucID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNPMNC.Models.LoaiTin", "LoaiTin")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("LoaiTinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNPMNC.Models.TinhTrang", "TinhTrang")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("TinhTrangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNPMNC.Models.TrangThai", "TrangThai")
                        .WithMany("TinRaoVats")
                        .HasForeignKey("TrangThaiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("HinhThuc");

                    b.Navigation("LoaiTin");

                    b.Navigation("TinhTrang");

                    b.Navigation("TrangThai");
                });

            modelBuilder.Entity("CNPMNC.Models.Category", b =>
                {
                    b.Navigation("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.City", b =>
                {
                    b.Navigation("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.HinhThuc", b =>
                {
                    b.Navigation("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.LoaiTin", b =>
                {
                    b.Navigation("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.TinhTrang", b =>
                {
                    b.Navigation("TinRaoVats");
                });

            modelBuilder.Entity("CNPMNC.Models.TrangThai", b =>
                {
                    b.Navigation("TinRaoVats");
                });
#pragma warning restore 612, 618
        }
    }
}
